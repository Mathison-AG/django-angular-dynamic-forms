{"version":3,"sources":["django-angular-dynamic-forms/src/impl/django-form-base.component.ts"],"names":[],"mappings":"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","file":"django-form-base.component.js","sourcesContent":["import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {MatSnackBar} from '@angular/material';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {ErrorService} from './error-service';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {\n    catchError, distinctUntilChanged, filter, map, mergeMap, partition, share, shareReplay,\n    tap\n} from 'rxjs/operators';\nimport {DjangoFormConfig} from '../django-form-iface';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/partition';\nimport 'rxjs/add/operator/first';\nimport {Subject} from 'rxjs/Subject';\nimport {DjangoFormContentComponent} from './django-form-content.component';\n\n/**\n * Form component targeted on django rest framework\n */\n@Component({\n    selector: 'django-form-base',\n    template: ''\n})\nexport class DjangoFormBaseComponent implements OnInit {\n\n    private url$ = new Subject<string>();\n    public config$: Observable<DjangoFormConfig>;\n    private _config$ = new Subject<DjangoFormConfig>();\n    public errors$ = new Subject<any>();\n\n    @ViewChild('form') form: DjangoFormContentComponent;\n\n    /**\n     * Returns submitted form data\n     *\n     */\n    @Output() submit = new EventEmitter<{ data: any; response?: any, cancel: boolean }>();\n\n    /**\n     * Returns cancelled form data\n     *\n     */\n    @Output() cancel = new EventEmitter<{ data: any }>();\n\n\n\n    @Input()\n    extra_form_data: any;\n\n    @Input()\n    form_id: string;\n\n    @Input()\n    public extra_config: any = {};\n\n    @Input()\n    public initial_data_transformation: (initial_data: any) => any = (x) => x\n\n    @Input()\n    public config_transformation: (config: DjangoFormConfig) => DjangoFormConfig = (x) => x\n\n    @Input()\n    set django_url(_url: string) {\n        this.url$.next(_url);\n    }\n\n    @Input()\n    set config(_config: any) {\n        this._config$.next(_config);\n    }\n\n    constructor(private httpClient: HttpClient, private snackBar: MatSnackBar, private error_service: ErrorService) {\n    }\n\n    ngOnInit(): void {\n        console.log('on init called');\n        const _configs = Observable.merge(\n            this.url$.pipe(\n                filter(url => !!url),\n                mergeMap((url: string) => this._download_django_form(url)), // url is never null here\n                // map(x => ({\n                //     ...this.extra_config,\n                //         x\n                // })),\n                shareReplay(1)\n            ),\n            this._config$.pipe(\n                filter(x => !!x)\n            )\n        ).partition<DjangoFormConfig>((x: DjangoFormConfig) => !!x.has_initial_data);\n\n        this.config$ = Observable.merge(\n            // if need initial data, return observable that loads them\n            _configs[0].pipe(\n                mergeMap((_config: DjangoFormConfig) => this.httpClient\n                    .get<any>(_config.django_url as string,     // never null here\n                        {withCredentials: true})\n                    .pipe(\n                        catchError(error => this.error_service.show_communication_error(error)),\n                        map(response => this.initial_data_transformation(response)),\n                        // and add the initial data as a property of the config\n                        map(response => ({\n                            ..._config,\n                            initial_data: response\n                        })))\n                )\n            ),\n            // otherwise, just return\n            _configs[1]\n        ).pipe(\n            map(config => this.config_transformation(config)),\n            shareReplay(1)\n        );\n    }\n\n    private _download_django_form(django_url: string): Observable<DjangoFormConfig> {\n        let django_form_url = django_url;\n        if (!django_form_url.endsWith('/')) {\n            django_form_url += '/';\n        }\n        django_form_url += 'form/';\n        if (this.form_id) {\n            django_form_url += this.form_id + '/';\n        }\n        return this.httpClient\n            .get<DjangoFormConfig>(django_form_url,\n                {\n                    withCredentials: true,\n                    params: this.extra_form_data\n                })\n            .pipe(\n                catchError(error => this.error_service.show_communication_error(error)),\n                map(config => (\n                    {\n                        django_url: django_url,     // add django url if not present\n                        ...config\n                    }\n                )),\n                map((config: DjangoFormConfig) => {\n                    config = {\n                        ...config,\n                        ...this.extra_config\n                    };\n                    if (config.initial_data) {\n                        // initial data already filled, do not fill them again\n                        config.has_initial_data = false;\n                    }\n                    return config;\n                })\n            );\n    }\n\n    public submitted(button_id: string, is_cancel: boolean) {\n        // clone the value so that button clicks are not remembered\n        const value = Object.assign({}, this.form.value);\n        this._flatten(null, value, null);\n        if (button_id) {\n            value[button_id] = true;\n        }\n        if (is_cancel) {\n            this.cancel.emit({data: value});\n        } else {\n            this.submit_to_django(value);\n        }\n    }\n\n    private submit_to_django(data: any) {\n        this.config$.first().subscribe((config: DjangoFormConfig) => {\n            let extra: any;\n            if (this.extra_form_data instanceof HttpParams) {\n                extra = {};\n                for (const k of this.extra_form_data.keys()) {\n                    extra[k] = this.extra_form_data.get(k);\n                }\n            } else {\n                extra = this.extra_form_data;\n            }\n            if (config.django_url) {\n                let call;\n                switch (config.method) {\n                    case 'post':\n                        call = this.httpClient.post(config.django_url, {...extra, ...data}, {withCredentials: true});\n                        break;\n                    case 'patch':\n                        call = this.httpClient.patch(config.django_url, {...extra, ...data}, {withCredentials: true});\n                        break;\n                    default:\n                        throw new Error(`Unimplemented method ${config.method}`);\n                }\n                call.pipe(\n                    catchError(error => {\n                        if (error.status === 400) {\n                            this.errors$.next(error.error);\n                            return Observable.empty();\n                        }\n                        return this.error_service.show_communication_error(error);\n                    })\n                ).subscribe(response => {\n                    this.errors$.next(null);\n                    this.snackBar.open('Saved', 'Dismiss', {\n                        duration: 2000,\n                        politeness: 'polite'\n                    });\n                    this.submit.emit({\n                        response: response,\n                        data: data,\n                        cancel: false\n                    });\n                });\n            } else {\n                this.submit.emit({\n                    data: data,\n                    cancel: false\n                });\n            }\n        });\n    }\n\n    private _flatten(name: string|null, current: any, parent: any) {\n        if (current !== Object(current)) {\n            return;\n        }\n        for (const k of Object.getOwnPropertyNames(current)) {\n            const val = current[k];\n            this._flatten(k, val, current);\n        }\n        if (name && name.startsWith('generated_')) {\n            for (const k of Object.getOwnPropertyNames(current)) {\n                parent[k] = current[k];\n            }\n            delete parent[name];\n        }\n    }\n\n    protected _generate_actions(actions: any) {\n        const ret = [];\n        if (actions) {\n            for (const action of actions) {\n                let action_id;\n                let action_label;\n                let action_cancel = false;\n                let action_color = 'primary';\n\n                if (Array.isArray(action)) {\n                    action_id = action[0];\n                    action_label = action[1];\n                    if (action_label === undefined) {\n                        action_label = action_id;\n                    }\n                } else if (Object(action) !== action) {\n                    action_id = action_label = action;\n                } else {\n                    action_id = action.id;\n                    action_label = action.label;\n                    action_cancel = action.cancel;\n                    if (action.color) {\n                        action_color = action.color;\n                    }\n                }\n                ret.push({\n                    id: action_id,\n                    label: action_label,\n                    color: action_color,\n                    cancel: action.cancel\n                });\n            }\n        }\n        return ret;\n    }\n}\n"]}